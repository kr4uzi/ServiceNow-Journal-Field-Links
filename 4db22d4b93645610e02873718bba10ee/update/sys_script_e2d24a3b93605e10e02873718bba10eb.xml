<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_journal_field</collection>
        <condition>!current.isActionAborted()</condition>
        <description>When a journal field is added via CoreUI, the audit and history records are created/updated before the journal field is created. This causes the audit and history (and thus the activity stream) to show the original not-clickable value.
This Business Rule updates the audit and history to show the correct value.</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Journal Field Links - Fix Audit</name>
        <order>9000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	/* global current, previous */
	/* global gs */
	/* global GlideRecord, GlideScriptedExtensionPoint */
	/* eslint no-undef: "error" */
	const session = gs.getSession();
	let fixData = session.getClientData('jfl_audit_fix');
	if (!fixData) {
		return;
	} else {
		session.putClientData('jfl_audit_fix', '');
		fixData = JSON.parse(fixData);
	}

	const eps = new GlideScriptedExtensionPoint().getExtensions('JournalFieldLinksExt');
	if (eps.length == 0) {
		gs.error(`${this.type} requires a JournalFieldLinksExt implementation`);
		return;
	}

	const ext = eps[0];
	ext.initialize();
	
	const auditGr = new GlideRecord('sys_audit');
	auditGr.addQuery('tablename', fixData.table);
	auditGr.addQuery('documentkey', fixData.record);
	auditGr.addQuery('fieldname', fixData.field);
	auditGr.addQuery('newvalue', fixData.oldValue);
	auditGr.orderByDesc('sys_created_on');
	auditGr.setLimit(1);
	auditGr.query();
	if (auditGr.next()) {
		ext.updateAuditValue(auditGr, fixData.newValue);
		ext.flagHistoryDirty(fixData.table, fixData.record);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-09-16 22:19:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e2d24a3b93605e10e02873718bba10eb</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Journal Field Links - Fix Audit</sys_name>
        <sys_overrides/>
        <sys_package display_value="Journal Field Links" source="x_376096_links">4db22d4b93645610e02873718bba10ee</sys_package>
        <sys_policy/>
        <sys_scope display_value="Journal Field Links">4db22d4b93645610e02873718bba10ee</sys_scope>
        <sys_update_name>sys_script_e2d24a3b93605e10e02873718bba10eb</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-09-19 07:13:45</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e2d24a3b93605e10e02873718bba10eb"/>
</record_update>
